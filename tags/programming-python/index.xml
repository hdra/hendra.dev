<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming, python on hendra.dev</title><link>https://hendra.dev/tags/programming-python/</link><description>Recent content in programming, python on hendra.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Feb 2012 22:51:00 +0700</lastBuildDate><atom:link href="https://hendra.dev/tags/programming-python/index.xml" rel="self" type="application/rss+xml"/><item><title>Python List Comprehension</title><link>https://hendra.dev/blog/softwares/2012/2012-02-25.python-list-comprehension/</link><pubDate>Sat, 25 Feb 2012 22:51:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-02-25.python-list-comprehension/</guid><description>Ok, been wanting to write about this for a while, in case i forgot, but seems like I almost forgot about it. It&amp;rsquo;s about a a feature of Python that I don&amp;rsquo;t really see in other languages i use such as C#, so I wanted to write about this in case i forgot.
Ok, so the list comprehension is a python feature that, as the name suggest, create a new list based on an existing list.</description></item><item><title>Python – Custom List Sorting Function</title><link>https://hendra.dev/blog/softwares/2012/2012-01-30.pythoncustom-list-sorting-function/</link><pubDate>Mon, 30 Jan 2012 19:26:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-30.pythoncustom-list-sorting-function/</guid><description>There are several ways to sort a list, where the basic ones is to use the list.sort() method to sort the list without returning anything, or use the sorted() function that returns a new sorted list, but this mostly works only on list that contains basic data types, if we want to sort a list that contains something else (another list, tuple, dictionary, custom classes, etc), we need to define a custom sorting function.</description></item><item><title>Python Learning – Part 3</title><link>https://hendra.dev/blog/softwares/2012/2012-01-12.python-learningpart-3/</link><pubDate>Thu, 12 Jan 2012 20:10:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-12.python-learningpart-3/</guid><description>Well, I was pretty busy this week, and I haven’t touch too much of Python these days, and even if if I done some exercise on Python, I was too lazy to write up a blog post for it, but I promised I will blog more to keep track of my progress, so here I am writing this.
Ok, so this time, I want to talk about the getting input from the user, and flow control in Python, in other words, I am going to talk about conditional statement and loop.</description></item><item><title>Python Learning Progress Part 1</title><link>https://hendra.dev/blog/softwares/2012/2012-01-09.python-learning-progress-part-1/</link><pubDate>Mon, 09 Jan 2012 19:55:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-09.python-learning-progress-part-1/</guid><description>Ok, so last time I mentioned that I began learning Python. with the Zed Shaw’s Learn Python The Hard Way as a guide, so far, it has been a pretty good experience. So, in this blog, I will try to summarize what I learned by trying to explain it in a way that I think easy to understand, in doing that I hope I can get more understanding about it.</description></item></channel></rss>