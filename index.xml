<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hendra.dev</title><link>https://hendra.dev/</link><description>Recent content on hendra.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 04 Sep 2021 16:32:29 +0700</lastBuildDate><atom:link href="https://hendra.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Vite and Phoenix</title><link>https://hendra.dev/blog/softwares/2021/2021-09-04.phoenix-vite/</link><pubDate>Sat, 04 Sep 2021 16:32:29 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2021/2021-09-04.phoenix-vite/</guid><description>I recently worked on a good-old server-rendered web application written in Phoenix. One part of this app is a rather complex form that requires quite a bit of plumbing and UI logic that is IMO a bit more than what can be comfortably written and maintained in vanilla Javascript or even AlpineJS.
Long story short, I decided to embed a small JS app built with one of the popular SPA frameworks.</description></item><item><title>Filtering Ecto Queries</title><link>https://hendra.dev/blog/softwares/2019/2019-03-14.ecto-filter-record/</link><pubDate>Sat, 11 May 2019 20:40:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2019/2019-03-14.ecto-filter-record/</guid><description>Use pattern matching and recursive function calls to apply filters to an Ecto query</description></item><item><title>Retrospective - 2017</title><link>https://hendra.dev/blog/journals/2018/2017-retrospective/</link><pubDate>Tue, 02 Jan 2018 18:33:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2018/2017-retrospective/</guid><description>Thoughts and reflections on the year 2017</description></item><item><title>TIL formmethod and formaction</title><link>https://hendra.dev/blog/softwares/2017/2017-05-24.til-formmethod-formaction/</link><pubDate>Wed, 24 May 2017 20:42:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2017/2017-05-24.til-formmethod-formaction/</guid><description>Little known attribute of HTML &lt;code>input&lt;/code> element</description></item><item><title>What You Should Learn as a Programmer</title><link>https://hendra.dev/blog/journals/2016/2016-07-01.tech-objectivity/</link><pubDate>Sat, 02 Jul 2016 18:23:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2016/2016-07-01.tech-objectivity/</guid><description>On programming, the tech world, hype, and &amp;ldquo;The Best {X}&amp;rdquo;</description></item><item><title>Supervisord and Job Retries</title><link>https://hendra.dev/blog/softwares/2016/2016-03-09.supervisord-and-retries/</link><pubDate>Wed, 09 Mar 2016 22:59:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2016/2016-03-09.supervisord-and-retries/</guid><description>Important note to remember when using supervisord with queues.</description></item><item><title>On Strict Domain Design or Pragmatism</title><link>https://hendra.dev/blog/softwares/2015/2015-04-10.on-purity/</link><pubDate>Fri, 10 Apr 2015 19:22:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2015/2015-04-10.on-purity/</guid><description>Lessons learned in modelling software.</description></item><item><title>Laravel Mass Assignment Protection - Blacklist V.S. Whitelist</title><link>https://hendra.dev/blog/softwares/2014/2014-07-12.laravel-mass-assignment-prevention/</link><pubDate>Sat, 12 Jul 2014 18:55:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2014/2014-07-12.laravel-mass-assignment-prevention/</guid><description>Difference between using whitelist and blacklist to prevent mass-assignment vulnerability in Laravel.</description></item><item><title>On Adding New Features</title><link>https://hendra.dev/blog/softwares/2014/2014-06-24.on-adding-new-features/</link><pubDate>Tue, 24 Jun 2014 19:42:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2014/2014-06-24.on-adding-new-features/</guid><description>On my job, I have been working on a product that we have been trying to get to market within this month. There are more-or-less 2 programmers working on this project, an iOS programmer working on an iPad app and an iPhone app, and myself working on the server backend and the data analysis front-end. I said &amp;lsquo;more-or-less&amp;rsquo; because there was another guy working on an Android app, but he currently is working on another project, also, while I do spend the majority of my time working on the project, I am also involved in several other clients projects.</description></item><item><title>Random Updates</title><link>https://hendra.dev/blog/journals/2014/2014-06-01.recent-changes/</link><pubDate>Sun, 01 Jun 2014 20:44:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2014/2014-06-01.recent-changes/</guid><description>Starting from this month, I have been officially in my current job for 6 months, which also means I just got out of the probation period for the company. During the past 6 months, I have been doing a bunch of various things, and also learned a lot of stuffs that I have never really thought about.
Anyway, the main reason I am writing this post right now is simple: I am procrastinating.</description></item><item><title>2014 - Thoughts</title><link>https://hendra.dev/blog/journals/2014/2014-01-29.2014-thoughts/</link><pubDate>Wed, 29 Jan 2014 14:33:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2014/2014-01-29.2014-thoughts/</guid><description>It&amp;rsquo;s rather late for a new year posting, considering we are almost entering the second month 2014 by now, but well, what can I say, I haven&amp;rsquo;t got much time to write the past few months, and now I am only writing because I&amp;rsquo;m stuck waiting for the next ferry back to my hometown that isn&amp;rsquo;t coming for 2 hours.
2014 is pretty special for myself. New years are usually a chance to start something for most people, a fresh start, where any unpleasant things that has happened happened &amp;ldquo;last year&amp;rdquo;.</description></item><item><title>New Stage in Life</title><link>https://hendra.dev/blog/journals/2013/2013-11-16.new-stage-in-life/</link><pubDate>Sat, 16 Nov 2013 19:47:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2013/2013-11-16.new-stage-in-life/</guid><description>It&amp;rsquo;s been a while since I posted anything. The last time I posted something was in August, so it has been around two months. Since then, many things have changed.
I had my last day in college on July. I had my convocation ceremony on October, so yep. I am officially holding a B.Sc. degree. It was pretty exciting. Also, now I am working as a Software Engineer! I am now officially a professional programmer.</description></item><item><title>A Tiny Bit on Firefox Extension</title><link>https://hendra.dev/blog/softwares/2013/2013-08-20.a-tiny-bit-on-firefox-extension/</link><pubDate>Tue, 20 Aug 2013 14:33:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-08-20.a-tiny-bit-on-firefox-extension/</guid><description>I stumbled on this article on creating Chrome extension, and really, it seems really simple to do build an extension for the browser. So, I thought what would it take to build the same thing for Firefox?
It turns out, it is pretty simple as well, but when you are just getting started, find out where to get started aren&amp;rsquo;t really straightforward. The getting started documents aren&amp;rsquo;t exactly well organized. To start with, there are two different ways to build an add-on for Firefox.</description></item><item><title>When Noise Gets Too Much</title><link>https://hendra.dev/blog/journals/2013/2013-07-11.when-noise-gets-too-much/</link><pubDate>Thu, 11 Jul 2013 23:15:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2013/2013-07-11.when-noise-gets-too-much/</guid><description>The World Wide Web is an amazing thing. The amount of resources available on it is enormous. You can learn just about anything you can think of with these resources. Recently though, I noticed that amount of low quality content is getting way a lot higher.
Until a few months ago, I collected almost everything I can get my hands on. I bookmarked every programming article I found that looked interesting, even though I barely know anything about the topic.</description></item><item><title>Setting up Development Environment with Tmux</title><link>https://hendra.dev/blog/softwares/2013/2013-07-09.setting-up-development-environment-with-tmux/</link><pubDate>Tue, 09 Jul 2013 16:02:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-07-09.setting-up-development-environment-with-tmux/</guid><description>I recently just finished up my bachelor studies, and as I wait for the the convocation, I find myself not knowing what to work on. So, between tying up loose ends with my scholarship sponsor, trying to score a freelance projects, and wasting time watching TV series, I spent my time playing around with various web front-end frameworks and libraries without any particular aims. In doing this I ended up creating a bunch of throw-away projects, and I switch around between them randomly quite often.</description></item><item><title>Setting Up Stuffs on Linux</title><link>https://hendra.dev/blog/softwares/2013/2013-06-14.setting-up-stuffs-on-linux/</link><pubDate>Fri, 14 Jun 2013 19:41:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-06-14.setting-up-stuffs-on-linux/</guid><description>My Linux system has been pretty much set up for most things I need, since of course, Linux Mint itself comes with a lot of stuffs such as python, and such. I myself am pretty surprised how much I have settled in. Still, there are still a number of stuffs that I need to add. First of, the utilities that includes stuffs such as gcc, cmake, curl, and all the stuff.</description></item><item><title>More Fun with Linux</title><link>https://hendra.dev/blog/softwares/2013/2013-06-11.more-fun-with-linux/</link><pubDate>Tue, 11 Jun 2013 13:04:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-06-11.more-fun-with-linux/</guid><description>Some stuffs that I did to make working with Linux easier.</description></item><item><title>WordPress is Big</title><link>https://hendra.dev/blog/softwares/2013/2013-06-07.wordpress-is-big/</link><pubDate>Fri, 07 Jun 2013 11:22:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-06-07.wordpress-is-big/</guid><description>Well, WordPress is big. Yes, that sounds silly, I know how big WordPress is, I just never really cared about the opportunity that it provides. I am currently looking for some freelance work to do, and I was pretty disappointed that most of what I found are WordPress jobs. Not that there is any problem with that, it was a wonderful blogging software, but it is a terrible CMS. As it tries to be more of a CMS, a terrible API that is hard to work with is what we have.</description></item><item><title>Setting Up My Linux to be Less Ugly</title><link>https://hendra.dev/blog/softwares/2013/making-my-new-linux-less-ugly/</link><pubDate>Sat, 01 Jun 2013 14:57:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/making-my-new-linux-less-ugly/</guid><description>As I decided to setup a new Linux installation that is lightweight, customizable to my taste, can be made look pretty, and of course, usable, I started looking around for the suitable setup.
First thing I need to decide on is which Linux distribution to use. I can either look for something bare bone like the Arch, and then build up everything I need, or I can just take something that is ready to use, like Ubuntu, and take out whatever I don&amp;rsquo;t need and replace anything I don&amp;rsquo;t like.</description></item><item><title>Setting Up My Linux on My Laptop, Changing My Approach</title><link>https://hendra.dev/blog/softwares/2013/linux-again/</link><pubDate>Wed, 29 May 2013 20:57:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/linux-again/</guid><description>I tried again and again to setup a Linux OS on my laptop, hoping to eventually making it my main operating system, but, again and again, I find it just not practical enough. There was always something that doesn&amp;rsquo;t work correctly. Things like programs that kept crashing, windows that suddenly froze, drivers not working, or simply, everything being sluggish. All that time, I always kept thinking that Linux on desktop is good enough to be used the same way I use Windows, or maybe, OSX.</description></item><item><title>My First GitHub Pull Request!</title><link>https://hendra.dev/blog/softwares/2013/2013-04-28.my-first-pull-request/</link><pubDate>Sun, 28 Apr 2013 11:44:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-04-28.my-first-pull-request/</guid><description>I just had my first pull request! It was a change to the Pelican themes, where I added this theme to the directory there. So, yeah, I didn&amp;rsquo;t actually contribute a patch to an existing project, it was simply adding my repo to the list of theme.
I also learned about the whole pull request process itself. Of course, it is not that complicated in the first place anyway. Basically it involves forking the source repo, create a new branch, make changes on that branch, commit, push to github, and then after the new branch is created on github, there will be an option to initiate a pull request there.</description></item><item><title>Setting Up My GitHub Pages</title><link>https://hendra.dev/blog/softwares/2013/2013-04-26.setting-up-my-github-pages/</link><pubDate>Fri, 26 Apr 2013 16:50:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-04-26.setting-up-my-github-pages/</guid><description>Previously, I had been hosting this site on Heroku. It was pretty simple to setup, I can just create an index.php file, then add another .htaccess file to the root of the site, push, and done. In this case, I maintained two separate repositories, one that contains the Pelican project, including the configuration file, the build script, etc. The other repositories contains the generated HTML files.
Now, I recently wanted to try hosting the site on GitHub Pages.</description></item><item><title>New Site Design!</title><link>https://hendra.dev/blog/softwares/2013/2013-04-13.new-site-design/</link><pubDate>Sat, 13 Apr 2013 19:33:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-04-13.new-site-design/</guid><description>I finally got to converting the last site design I made to a Pelican theme. The theme should be in use by the time this post is published. In its current state, I wouldn&amp;rsquo;t say the theme is compeletely finished. I tried to make it responsive to screen size changes, but during my testing, I found some problem viewing it in iOS Safari when there is a long line of continuos text in the page.</description></item><item><title>Made Another Design For the Blog</title><link>https://hendra.dev/blog/softwares/2013/2013-04-10.another-new-web-theme/</link><pubDate>Wed, 10 Apr 2013 09:02:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-04-10.another-new-web-theme/</guid><description>Recently I have been spending my time messing around with website front-end development. Probably because of I have been trying to write a Pelican theme for my own website. For My own use, I wanted the website to have a landing page, and also another design for the blog index. I made another attempt at the design recently. Here is the landing page:
and here is the blog index:
I also managed to made the design responsive.</description></item><item><title>Still Working</title><link>https://hendra.dev/blog/softwares/2013/2013-04-03.website-progress/</link><pubDate>Wed, 03 Apr 2013 17:16:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/2013-04-03.website-progress/</guid><description>It has been a few weeks since I decided to start blogging again, but well, as usual not much has been done on it. For starter, I initially planned to host it on Heroku, following the tricks outline here, and it is super simple to setup. I had created a new Heroku app, generated the blog, and pushed the generated content to Heroku in just a few minutes. In another minute, and I had setup the custom domain and had everything working nicely.</description></item><item><title>Hello, Pelican</title><link>https://hendra.dev/blog/softwares/2013/hello_pelican/</link><pubDate>Fri, 15 Mar 2013 13:19:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2013/hello_pelican/</guid><description>Well, it has been a while since I posted anything or do anything with my website for that matter. I think I haven&amp;rsquo;t posted anything since I moved to wordpress.com, but well, its time to start playing again.
So, again, I moved almost everything. Hosting, domain, and also the blogging platform. I have been wanting to try out some of the static site generator for a while now. The most popular one seems to be Jekyll.</description></item><item><title>Some XAML Syntax to Remember</title><link>https://hendra.dev/blog/softwares/2012/2012-08-14.some-xaml-syntax-to-remember/</link><pubDate>Tue, 14 Aug 2012 14:17:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-08-14.some-xaml-syntax-to-remember/</guid><description>After developing for WPF/ Silverlight for a while, most people will be familiar with using XAML to declare UI elements, but even though I have been comfortable with XAML for quite a while, I don’t really know what is going on behind the stage. Reading Programming Windows by Charles Petzold shed some lights on it for me, so this post is here again so that I won’t forget.
One important thing I didn&amp;rsquo;t know before is that XAML file more or less is just another way to express the C# code, and the XAML elements in it are actually .</description></item><item><title>I Bought a Xperia Sola</title><link>https://hendra.dev/blog/journals/2012/2012-07-12.i-bought-a-xperia-sola/</link><pubDate>Thu, 12 Jul 2012 17:40:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2012/2012-07-12.i-bought-a-xperia-sola/</guid><description>I bought a new phone.</description></item><item><title>End of Internship</title><link>https://hendra.dev/blog/journals/2012/2012-07-07.end-of-internship/</link><pubDate>Sat, 07 Jul 2012 16:35:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2012/2012-07-07.end-of-internship/</guid><description>Yesterday was the last day of my internship at Terato Tech, 20 weeks has passed by so quickly. I had a lot of fun, learned a lot of new stuffs, and last but not least, met a lot of interesting people.
I had to leave the project I was working on, and that is a little bit sad, but I hope I can at least tie up some of the loose ends before I stop working on it to move on the next project.</description></item><item><title>Blocking Time Sucking Sites</title><link>https://hendra.dev/blog/journals/2012/2012-06-26.blocking-time-sucking-sites/</link><pubDate>Tue, 26 Jun 2012 23:25:00 +0700</pubDate><guid>https://hendra.dev/blog/journals/2012/2012-06-26.blocking-time-sucking-sites/</guid><description>This is just one thing that I do, and it involves some editing on a system file, so do it on your own risk. Alright, so one thing that I do to avoid wasting too much time on a just-for-fun site, is to completely block it on my OS. Of course, I can still easily unblock it, but since I am very lazy, most of the time I simply won’t bother doing it.</description></item><item><title>Windows Phone 8, WinRT, and so on.</title><link>https://hendra.dev/blog/softwares/2012/2012-06-24.windows-phone-8-winrt-and-so-on/</link><pubDate>Sun, 24 Jun 2012 13:01:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-06-24.windows-phone-8-winrt-and-so-on/</guid><description>Some thoughts on the new announcement regarding Windows Phone.</description></item><item><title>Data Binding in .NET</title><link>https://hendra.dev/blog/softwares/2012/2012-06-10.data-binding-in-net/</link><pubDate>Sun, 10 Jun 2012 10:37:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-06-10.data-binding-in-net/</guid><description>I am now trying to use the concept of MVVM in my applications, as I believe a proper separation of concerns is very important in building an application, as from I personally experienced when developing in PHP with CodeIgniter, it really makes development much easier.
So, I think for an event driven application pattern such as WPF, Silverlight, and also WP7, (maybe Windows 8 as well), it seems pretty obvious to take advantage of the existing abstraction of the framework, so MVVM would go well with these kind of applications.</description></item><item><title>Threading in C#</title><link>https://hendra.dev/blog/softwares/2012/2012-05-31.cs-threading/</link><pubDate>Thu, 31 May 2012 23:05:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-31.cs-threading/</guid><description>Well, this time, I am going to talk about thread, the concept of thread is pretty simple to understand, so I wont explain the here, but you can read more about it in this wiki page. Threading are used quite extensively in most modern computer programs, for example separating threads to handle button clicks on a GUI button from the one that handles data processing, or in chatting programs, where it separates threads to send messages from the one that handles incoming messages and display it on the screen.</description></item><item><title>Implicitly Typed Language and Anonymous Types in C#</title><link>https://hendra.dev/blog/softwares/2012/2012-05-30.implicitly-typed-language-and-anonymous-types-in-c/</link><pubDate>Wed, 30 May 2012 23:16:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-30.implicitly-typed-language-and-anonymous-types-in-c/</guid><description>In C#, there is this var keyword, which allows you to declare a variable without explicitly specifying its data type. It is important to note, that this doesn’t mean that it is dynamically typed, it simply means that the compiler will infer the data type for you, and it is also important to note, that it is strongly typed. So, this code below, will simply create a variable called x, with the data type of string.</description></item><item><title>Lambda Expression with C#</title><link>https://hendra.dev/blog/softwares/2012/2012-05-30.lambda-expression/</link><pubDate>Wed, 30 May 2012 21:40:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-30.lambda-expression/</guid><description>Previous in my post regarding delegate, I talked a little about anonymous method that can be used with delegates, there are other forms to declare inline functions. Both of them are collectively known as anonymous functions of C#. Here is one example that shows how different method assignments are used with delegate.
:::csharp class SampleClass { public delegate void SampleDelegate(string s); public void SampleMethod(string s) { Console.WriteLine(s); } public static void Main(string[] args) { SampleDelegate a = SampleMethod; SampleDelegate b = new SampleDelegate(SampleMethod); SampleDelegate c = delegate(string s){Console.</description></item><item><title>Events in C#</title><link>https://hendra.dev/blog/softwares/2012/2012-05-30.events-in-c/</link><pubDate>Wed, 30 May 2012 00:27:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-30.events-in-c/</guid><description>Alright, last time I posted about Delegate, and together with event, they are one of the most important concept to understand in event driven application framework, such as WPF, Silverlight, and Silverlight for WP7, and maybe even WinRT as well (I haven’t tried it), so I believe it is important to understand how it work, especially when these two are pretty closely related.
I find the explanation on MSDN is pretty easy to understand, Event is a way for a class to provide notifications to clients when something interesting happens.</description></item><item><title>Some Stuff I Didn’t Know About String in C#</title><link>https://hendra.dev/blog/softwares/2012/2012-05-25.some-stuff-i-didnt-know-about-string-in-c/</link><pubDate>Fri, 25 May 2012 23:08:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-25.some-stuff-i-didnt-know-about-string-in-c/</guid><description>Well, its a bit strange getting to know something that I’ve used extensively for quite a while, but there are indeed some things that feels revealing.
First of all, I knew that strings is a little bit special, in a way that it is a reference type, but it behaves very much like a value type, for example:
:::csharp SomeClass a = new SomeClass(); a.age = 18; SomeClass b = a; b.</description></item><item><title>Some Standard C# Object Methods That You Might Want to Override</title><link>https://hendra.dev/blog/softwares/2012/2012-05-25.some-standard-c-object-methods-that-you-might-want-to-override/</link><pubDate>Fri, 25 May 2012 22:22:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-25.some-standard-c-object-methods-that-you-might-want-to-override/</guid><description>Alright, I’ll get it straight to the point, since this is just a note to myself anyway,
First one, the ToString() :
:::csharp class YourClass{ private string name; private int age; public override string ToString() { return &amp;quot;Name: &amp;quot;+this.name+&amp;quot;,Age: &amp;quot;+this.age.toString(); } } The reason to this is, simple, to have an easy way to get a string representation of your object. Of course, in a way, you can also create a new method to return the same thing, but it is a good idea to do it the “C# way”, and the ToString method is always there, so why create two methods that serve the same purpose?</description></item><item><title>C# – Optional Arguments and Constructor Chaining</title><link>https://hendra.dev/blog/softwares/2012/2012-05-22.csharp-optional-arguments-and-constructor-chaining/</link><pubDate>Tue, 22 May 2012 23:19:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-22.csharp-optional-arguments-and-constructor-chaining/</guid><description>Learned something new about C# today, first thing is Constructor Chaining. Constructor chaining enables constructors to call another overloaded constructor, with it, the amount of duplicate code can be reduced significantly, here is an example:
:::csharp class Person{ string name; int age; string address; public Person(string name):this(string.Empty,0,string.Empty) { } public Person(string name):this(name,0,string.Empty) { } public Person(string name, int age):this(name,age,string.Empty) { } public Person(string name, int age, string address) { this.name=name; this.</description></item><item><title>Javascript – Setting Events to Unique Anonymous Functions</title><link>https://hendra.dev/blog/softwares/2012/2012-05-22.javascriptsetting-events-to-unique-anonymous-functions/</link><pubDate>Tue, 22 May 2012 22:24:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-22.javascriptsetting-events-to-unique-anonymous-functions/</guid><description>Ok, the easiest way to convey my point is with code, so:
:::javascript function foo(bar){console.log(bar);} for(var i=1;i&amp;lt;5;i++){ $('someDiv'+i).onclick=function(){foo(i);}; } Say you are trying to set the onclick event of an array of elements in your page, and each of these events need to trigger the same function, but passing different parameter, seems simple enough, but if you try to run the code above, all of the click events will print the value 5.</description></item><item><title>C# Back to Basics</title><link>https://hendra.dev/blog/softwares/2012/2012-05-20.c-back-to-basics/</link><pubDate>Sun, 20 May 2012 23:12:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-05-20.c-back-to-basics/</guid><description>I have been programming C# for quite some time, but when I think about it, I have never really tried to learn C# as a language, instead what I’ve been playing with around are mostly the .NET framework itself, this result in me having to guess the magic behind many of the operations in the programs I wrote myself, and that sucks.
I think this is a problem that plagues many .</description></item><item><title>Phonegap in Visual Studio – There is no script engine for file extension ‘.js’</title><link>https://hendra.dev/blog/softwares/2012/2012-03-28.visual-studiothere-is-no-script-engine-for-file-extension-js/</link><pubDate>Wed, 28 Mar 2012 21:59:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-03-28.visual-studiothere-is-no-script-engine-for-file-extension-js/</guid><description>As I recently reinstalled my Windows system, I had to re-install almost every programs I usually use again, one of them is the Visual Studio, and since I have been messing around with Phonegap these days, I had to set it up again. I did what I did before, copying the project template zip file to my templates folder, and I tried to create a new Phonegap project, but when I try to build it, Visual Studio gives me an error saying : “There is no script engine for file extension .</description></item><item><title>Django Template System</title><link>https://hendra.dev/blog/softwares/2012/2012-03-23.django-template-system/</link><pubDate>Fri, 23 Mar 2012 20:19:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-03-23.django-template-system/</guid><description>Okay, last time I talked about the basic web page in Django, and it used the shortest shortcut with the render_to_reponse, but there are manual way to do the same thing using Template and Context class, and there are many scenario where we might want to do it the manual way to have more control, so to do it manually, here is the code:
:::python from django.http import HttpResponse from django.</description></item><item><title>Basic Django Web Application</title><link>https://hendra.dev/blog/softwares/2012/2012-03-23.basic-django-web-application/</link><pubDate>Fri, 23 Mar 2012 15:57:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-03-23.basic-django-web-application/</guid><description>For the past few weeks, I have been writing quite a lot in PHP, more specifically, CodeIgniter, and to be honest, writing web applications in CodeIgniter is really easy and intuitive, and even though I came across the MVC pattern (or MVT, for that matter) for the first time in Django, I quickly forgotten even the basics of Django. So, in to prevent myself from forgetting something like this again in the future, I am writing this blogpost, to explain the basic of rendering a web page with Django.</description></item><item><title>Setting Up Python on Windows</title><link>https://hendra.dev/blog/softwares/2012/2012-03-22.setting-up-python-on-windows/</link><pubDate>Thu, 22 Mar 2012 11:47:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-03-22.setting-up-python-on-windows/</guid><description>Well, it’s a bit late for posting this, considering I have been playing with Python for few months as I posted before, but, I recently reinstalled my Windows, so I need to setup everything once again. This time, I am trying to do it the right way, and my previous Python setup isn’t really completely setup anyway, since I did most of my python related works on my Linux Mint install.</description></item><item><title>Python Generator Expression</title><link>https://hendra.dev/blog/softwares/2012/2012-02-25.python-generator-expression/</link><pubDate>Sat, 25 Feb 2012 23:06:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-02-25.python-generator-expression/</guid><description>Continuing the last post, another thing i would like to note is the generator expression in python. The function is almost the same as the list comprehension, but instead of processing the whole data structures at once, it performs the works one at a time. This would mean less memory usage and performance when dealing with a massive amount of data. To use it, just replace the square brackets on list comprehension with parentheses.</description></item><item><title>Python List Comprehension</title><link>https://hendra.dev/blog/softwares/2012/2012-02-25.python-list-comprehension/</link><pubDate>Sat, 25 Feb 2012 22:51:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-02-25.python-list-comprehension/</guid><description>Ok, been wanting to write about this for a while, in case i forgot, but seems like I almost forgot about it. It&amp;rsquo;s about a a feature of Python that I don&amp;rsquo;t really see in other languages i use such as C#, so I wanted to write about this in case i forgot.
Ok, so the list comprehension is a python feature that, as the name suggest, create a new list based on an existing list.</description></item><item><title>Windows Phone – Context Menu on a ListBox</title><link>https://hendra.dev/blog/softwares/2012/2012-02-23.windows-phonecontext-menu-on-a-listbox/</link><pubDate>Thu, 23 Feb 2012 22:04:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-02-23.windows-phonecontext-menu-on-a-listbox/</guid><description>Ok, I have been working on updating one of my windows phone app, Swatch 7. I added a feature that allows user to save the color they picked. I have write more on that on another post, maybe after the app on the marketplace is updated. So, to remove one finished doing that, but I’llof the saved color, I used the context menu provided with the windows phone toolkit. It’s a bit different in the way that I can’t access the selected item of the ListBox the ordinary way ( the selectedIndex returns –1, so that means holding down a listbox item doesn’t count as selecting it).</description></item><item><title>Python – Custom List Sorting Function</title><link>https://hendra.dev/blog/softwares/2012/2012-01-30.pythoncustom-list-sorting-function/</link><pubDate>Mon, 30 Jan 2012 19:26:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-30.pythoncustom-list-sorting-function/</guid><description>There are several ways to sort a list, where the basic ones is to use the list.sort() method to sort the list without returning anything, or use the sorted() function that returns a new sorted list, but this mostly works only on list that contains basic data types, if we want to sort a list that contains something else (another list, tuple, dictionary, custom classes, etc), we need to define a custom sorting function.</description></item><item><title>Python Learning Progress – Part 4</title><link>https://hendra.dev/blog/softwares/2012/2012-01-26.python-learning-progresspart-4/</link><pubDate>Thu, 26 Jan 2012 11:21:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-26.python-learning-progresspart-4/</guid><description>Last time I talked about getting input and a little about conditional statement and looping that should’ve enabled you to start creating the basic application and implement some basic algorithm in Python. This time, I am going to do a review on some of the basic data structures in Python.
The basic data structures in Python are: list, tuples, and dictionaries.
Let me start with dictionaries. Dictionaries basically defines a one-to-one relationship between a key and a value, just like an ordinary dictionary, where a word is associated with its definition.</description></item><item><title>WP7 Apps – Swatch 7</title><link>https://hendra.dev/blog/softwares/2012/2012-01-17.wp7-appsswatch-7/</link><pubDate>Tue, 17 Jan 2012 00:14:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-17.wp7-appsswatch-7/</guid><description>Summary</description></item><item><title>Python Learning – Part 3</title><link>https://hendra.dev/blog/softwares/2012/2012-01-12.python-learningpart-3/</link><pubDate>Thu, 12 Jan 2012 20:10:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-12.python-learningpart-3/</guid><description>Well, I was pretty busy this week, and I haven’t touch too much of Python these days, and even if if I done some exercise on Python, I was too lazy to write up a blog post for it, but I promised I will blog more to keep track of my progress, so here I am writing this.
Ok, so this time, I want to talk about the getting input from the user, and flow control in Python, in other words, I am going to talk about conditional statement and loop.</description></item><item><title>My First WP7 Apps on the Marketplace – Demotivator 7</title><link>https://hendra.dev/blog/softwares/2012/2012-01-10.my-first-wp7-apps-on-the-marketplacedemotivator-7/</link><pubDate>Tue, 10 Jan 2012 20:35:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-10.my-first-wp7-apps-on-the-marketplacedemotivator-7/</guid><description>Ok, so I mentioned that I am developing several Windows Phone 7 Apps, and I actually got one of them published on the marketplace! Most of the others are still unpublished yet though, either its going on review, or well, I just didn’t finish it.
So, here is the one that got it to the marketplace. Demotivator 7, it’s a application to create demotivator posters from the pictures stored in the phone.</description></item><item><title>Python Learning Progress Part 1</title><link>https://hendra.dev/blog/softwares/2012/2012-01-09.python-learning-progress-part-1/</link><pubDate>Mon, 09 Jan 2012 19:55:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2012/2012-01-09.python-learning-progress-part-1/</guid><description>Ok, so last time I mentioned that I began learning Python. with the Zed Shaw’s Learn Python The Hard Way as a guide, so far, it has been a pretty good experience. So, in this blog, I will try to summarize what I learned by trying to explain it in a way that I think easy to understand, in doing that I hope I can get more understanding about it.</description></item><item><title>Kinect Project Status Update I - Tools For Building a Kinect Applications</title><link>https://hendra.dev/blog/softwares/2011/2011-10-14.kinect-project-status-update-i-tools-for-building-a-kinect-applications/</link><pubDate>Fri, 14 Oct 2011 12:24:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2011/2011-10-14.kinect-project-status-update-i-tools-for-building-a-kinect-applications/</guid><description>Update on my attempts on working with Kinect.</description></item><item><title>Testing the Water on Kinect Applications</title><link>https://hendra.dev/blog/softwares/2011/2011-10-02.testing-the-water-on-kinect-applications/</link><pubDate>Sun, 02 Oct 2011 16:01:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2011/2011-10-02.testing-the-water-on-kinect-applications/</guid><description>Okay, so I am started planning my final year project this semester, and for this first phase, I am only required to do the planning, the documentation and well, the report stuffs, but, since I don&amp;rsquo;t have any pictures of the Microsoft Kinect application development, I decided to do some coding on it as well.
Since there are so many possibilities on what the Kinect can do, there are several choices on what kind of application I am going to do, I need to narrow it down.</description></item><item><title>My First Android Application</title><link>https://hendra.dev/blog/softwares/2011/2011-07-02.my-first-android-application/</link><pubDate>Sat, 02 Jul 2011 22:35:00 +0700</pubDate><guid>https://hendra.dev/blog/softwares/2011/2011-07-02.my-first-android-application/</guid><description>Ok, I think I mentioned that I (with a partner in my group) am developing an Android application for a class assignment, and here it is, its finished, but not a really usable apps though.
It’s a app to encrypt SMS before sending it. It uses an asymmetric encryption algorithm, RSA, meaning that the key exchange needs to be done before sending any encrypted message. The encryption and decryption can only be done within the apps itself.</description></item><item><title/><link>https://hendra.dev/notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hendra.dev/notes/</guid><description>work in progress</description></item></channel></rss>